{"ast":null,"code":"var DISPLAY_MESSAGES = 'HELLOWORD/DISPLAY_MESSAGES';\n\nvar loadMessages = function loadMessages(json) {\n  return {\n    type: DISPLAY_MESSAGES,\n    json: json\n  };\n};\n\nvar messageReducer = function messageReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case DISPLAY_MESSAGES:\n      return action.json.map(function (message) {\n        var id = message.id,\n            body = message.body;\n        return {\n          id: id,\n          body: body\n        };\n      });\n\n    default:\n      return state;\n  }\n};\n\nvar displayMessages = function displayMessages() {\n  return function (dispatch) {\n    fetch('api/messages').then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return dispatch(loadMessages(json));\n    });\n  };\n};\n\nexport { loadMessages, messageReducer, displayMessages };","map":{"version":3,"sources":["/home/donat/Documents/react-rails/hello-rails-react/app/javascript/redux/Messages.js"],"names":["DISPLAY_MESSAGES","loadMessages","json","type","messageReducer","state","action","map","message","id","body","displayMessages","dispatch","fetch","then","response"],"mappings":"AAAA,IAAMA,gBAAgB,GAAG,4BAAzB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD;AAAA,SAAW;AAC5BC,IAAAA,IAAI,EAAEH,gBADsB;AAE5BE,IAAAA,IAAI,EAAJA;AAF4B,GAAX;AAAA,CAArB;;AAKA,IAAME,cAAc,GAAG,SAAjBA,cAAiB,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AAC3C,UAAQA,MAAM,CAACH,IAAf;AACI,SAAKH,gBAAL;AACI,aAAOM,MAAM,CAACJ,IAAP,CAAYK,GAAZ,CAAgB,UAACC,OAAD,EAAa;AAChC,YACIC,EADJ,GAGID,OAHJ,CACIC,EADJ;AAAA,YAEIC,IAFJ,GAGIF,OAHJ,CAEIE,IAFJ;AAIA,eAAO;AACHD,UAAAA,EAAE,EAAFA,EADG;AACCC,UAAAA,IAAI,EAAJA;AADD,SAAP;AAGH,OARM,CAAP;;AASA;AACE,aAAOL,KAAP;AAZV;AAcH,CAfD;;AAiBA,IAAMM,eAAe,GAAG,SAAlBA,eAAkB;AAAA,SAAM,UAACC,QAAD,EAAc;AACxCC,IAAAA,KAAK,CAAC,cAAD,CAAL,CACGC,IADH,CACQ,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACb,IAAT,EAAd;AAAA,KADR,EAEGY,IAFH,CAEQ,UAACZ,IAAD;AAAA,aAAUU,QAAQ,CAACX,YAAY,CAACC,IAAD,CAAb,CAAlB;AAAA,KAFR;AAGH,GAJuB;AAAA,CAAxB;;AAMA,SACID,YADJ,EAEIG,cAFJ,EAGIO,eAHJ","sourcesContent":["const DISPLAY_MESSAGES = 'HELLOWORD/DISPLAY_MESSAGES';\n\nconst loadMessages = (json) => ({\n    type: DISPLAY_MESSAGES,\n    json,\n});\n\nconst messageReducer = (state = [], action) => {\n    switch (action.type) {\n        case DISPLAY_MESSAGES:\n            return action.json.map((message) => {\n                const {\n                    id,\n                    body,\n                } = message;\n                return {\n                    id, body,\n                };\n            });\n            default:\n              return state;\n    }\n};\n\nconst displayMessages = () => (dispatch) => {\n    fetch('api/messages')\n      .then((response) => response.json())\n      .then((json) => dispatch(loadMessages(json)));\n};\n\nexport {\n    loadMessages,\n    messageReducer,\n    displayMessages,\n};"]},"metadata":{},"sourceType":"module"}